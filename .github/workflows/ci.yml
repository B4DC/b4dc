name: CI - Build, Test & Analyze Burger Frontend + Backend

on:
  push:
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
      - 'k8s/**'

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build frontend Docker image
        run: docker build -t badchan/burger-frontend ./frontend

      - name: Run and test frontend container
        run: |
          docker run -d -p 8080:80 --name test-frontend badchan/burger-frontend
          sleep 5
          curl -f http://localhost:8080
          docker stop test-frontend
          docker rm test-frontend

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build backend Docker image
        run: docker build -t badchan/burger-backend ./backend

      - name: Run and test backend container
        run: |
          docker run -d -p 5000:5000 --name test-backend badchan/burger-backend
          sleep 5
          curl -f http://localhost:5000/api/burger
          docker stop test-backend
          docker rm test-backend

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend] # only run after builds succeed

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # better relevancy for analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: fail pipeline if Quality Gate fails
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
